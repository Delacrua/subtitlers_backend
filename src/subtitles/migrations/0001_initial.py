# Generated by Django 4.1.7 on 2023-04-05 18:04

from django.db import migrations
from django.db import models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Episode",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("episode_number", models.PositiveIntegerField(blank=True)),
                ("episode_title", models.CharField(blank=True, max_length=255)),
                ("other_titles", models.JSONField(blank=True, null=True)),
                ("duration", models.DurationField(blank=True, null=True)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("summary", models.CharField(blank=True, max_length=1023)),
            ],
        ),
        migrations.CreateModel(
            name="Film",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255)),
                ("other_titles", models.JSONField(blank=True, null=True)),
                ("released", models.PositiveIntegerField(blank=True)),
                ("duration", models.DurationField(blank=True, null=True)),
                (
                    "difficulty_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("beginner", "Beginner"),
                            ("beginner_intermediate", "Beginner - Intermediate"),
                            ("intermediate", "Intermediate"),
                            ("intermediate_advanced", "Intermediate - Advanced"),
                            ("advanced", "Advanced"),
                        ],
                        max_length=30,
                    ),
                ),
                ("poster", models.ImageField(blank=True, null=True, upload_to="")),
                ("description", models.CharField(blank=True, max_length=255)),
                ("summary", models.CharField(blank=True, max_length=1023)),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=30)),
                ("readable", models.CharField(max_length=30)),
                ("is_film_genre", models.BooleanField(default=False)),
                ("is_series_genre", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Word",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("text", models.CharField(max_length=255)),
                ("translations", models.JSONField(blank=True, null=True)),
                ("definition", models.CharField(blank=True, max_length=25)),
                ("is_uncommon", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="WordQuantity",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("quantity", models.IntegerField(default=0)),
                (
                    "episode",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="subtitles.episode"
                    ),
                ),
                (
                    "film",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="subtitles.film"
                    ),
                ),
                ("word", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="subtitles.word")),
            ],
        ),
        migrations.AddField(
            model_name="word",
            name="episode",
            field=models.ManyToManyField(
                blank=True, related_name="words", through="subtitles.WordQuantity", to="subtitles.episode"
            ),
        ),
        migrations.AddField(
            model_name="word",
            name="film",
            field=models.ManyToManyField(
                blank=True, related_name="words", through="subtitles.WordQuantity", to="subtitles.film"
            ),
        ),
        migrations.CreateModel(
            name="Series",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255)),
                ("other_titles", models.JSONField(blank=True, null=True)),
                ("released", models.PositiveIntegerField(blank=True)),
                ("ended", models.PositiveIntegerField(blank=True)),
                ("number_of_seasons", models.PositiveIntegerField(blank=True)),
                ("number_of_episodes", models.PositiveIntegerField(blank=True)),
                (
                    "difficulty_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("beginner", "Beginner"),
                            ("beginner_intermediate", "Beginner - Intermediate"),
                            ("intermediate", "Intermediate"),
                            ("intermediate_advanced", "Intermediate - Advanced"),
                            ("advanced", "Advanced"),
                        ],
                        max_length=30,
                    ),
                ),
                ("poster", models.ImageField(blank=True, null=True, upload_to="")),
                ("description", models.CharField(blank=True, max_length=255)),
                ("genres", models.ManyToManyField(related_name="series", to="subtitles.genre")),
            ],
        ),
        migrations.CreateModel(
            name="Season",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("season_number", models.PositiveIntegerField(blank=True)),
                ("number_of_episodes", models.PositiveIntegerField(blank=True)),
                ("released", models.PositiveIntegerField(blank=True)),
                ("ended", models.PositiveIntegerField(blank=True)),
                ("description", models.CharField(blank=True, max_length=255)),
                (
                    "series",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="seasons", to="subtitles.series"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("question_text", models.CharField(max_length=255)),
                ("question_translations", models.JSONField(blank=True, null=True)),
                ("answer_text", models.CharField(max_length=255)),
                ("answer_translations", models.JSONField(blank=True, null=True)),
                (
                    "episode",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="questions",
                        to="subtitles.episode",
                    ),
                ),
                (
                    "film",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="questions",
                        to="subtitles.film",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Phrase",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("text", models.CharField(max_length=255)),
                ("translations", models.JSONField(blank=True, null=True)),
                ("definition", models.CharField(blank=True, max_length=255)),
                ("is_idiom", models.BooleanField(default=False)),
                ("episode", models.ManyToManyField(blank=True, related_name="phrases", to="subtitles.episode")),
                ("film", models.ManyToManyField(blank=True, related_name="phrases", to="subtitles.film")),
            ],
        ),
        migrations.AddField(
            model_name="film",
            name="genres",
            field=models.ManyToManyField(related_name="films", to="subtitles.genre"),
        ),
        migrations.AddField(
            model_name="episode",
            name="season",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="episodes", to="subtitles.season"
            ),
        ),
    ]
